// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: payment.sql

package repositories

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const insertPayment = `-- name: InsertPayment :one
INSERT INTO payments(user_id, remarks, payment_amount) VALUES($1, $2, $3) RETURNING payment_id, user_id, remarks, payment_amount, created_at, updated_at
`

type InsertPaymentParams struct {
	UserID        pgtype.UUID    `db:"user_id" json:"user_id"`
	Remarks       string         `db:"remarks" json:"remarks"`
	PaymentAmount pgtype.Numeric `db:"payment_amount" json:"payment_amount"`
}

func (q *Queries) InsertPayment(ctx context.Context, arg InsertPaymentParams) (Payment, error) {
	row := q.db.QueryRow(ctx, insertPayment, arg.UserID, arg.Remarks, arg.PaymentAmount)
	var i Payment
	err := row.Scan(
		&i.PaymentID,
		&i.UserID,
		&i.Remarks,
		&i.PaymentAmount,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
